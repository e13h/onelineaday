name: Build and Push Container Images

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-amd64
            type=ref,event=pr,suffix=-amd64
            type=semver,pattern={{version}},suffix=-amd64
            type=sha,suffix=-amd64
            type=raw,value=latest-amd64,enable=${{ github.event_name == 'release' }}
            type=raw,value=latest-devel-amd64,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-amd64
            type=ref,event=pr,suffix=-amd64
            type=semver,pattern={{version}},suffix=-amd64
            type=sha,suffix=-amd64
            type=raw,value=latest-amd64,enable=${{ github.event_name == 'release' }}
            type=raw,value=latest-devel-amd64,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Build and push frontend image (amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          target: frontend
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push backend image (amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          target: backend
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-arm64:
    runs-on: macos-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-arm64
            type=ref,event=pr,suffix=-arm64
            type=semver,pattern={{version}},suffix=-arm64
            type=sha,suffix=-arm64
            type=raw,value=latest-arm64,enable=${{ github.event_name == 'release' }}
            type=raw,value=latest-devel-arm64,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-arm64
            type=ref,event=pr,suffix=-arm64
            type=semver,pattern={{version}},suffix=-arm64
            type=sha,suffix=-arm64
            type=raw,value=latest-arm64,enable=${{ github.event_name == 'release' }}
            type=raw,value=latest-devel-arm64,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Build and push frontend image (arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          target: frontend
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push backend image (arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          target: backend
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push frontend manifest
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.sha }}
            ${{ github.event_name == 'release' && format('{0}/{1}:latest', env.REGISTRY, env.FRONTEND_IMAGE_NAME) || '' }}
            ${{ github.event_name == 'release' && format('{0}/{1}:v{2}', env.REGISTRY, env.FRONTEND_IMAGE_NAME, github.event.release.tag_name) || '' }}
            ${{ github.ref == 'refs/heads/main' && format('{0}/{1}:latest-devel', env.REGISTRY, env.FRONTEND_IMAGE_NAME) || '' }}
          amend: true

      - name: Create and push backend manifest
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}
            ${{ github.event_name == 'release' && format('{0}/{1}:latest', env.REGISTRY, env.BACKEND_IMAGE_NAME) || '' }}
            ${{ github.event_name == 'release' && format('{0}/{1}:v{2}', env.REGISTRY, env.BACKEND_IMAGE_NAME, github.event.release.tag_name) || '' }}
            ${{ github.ref == 'refs/heads/main' && format('{0}/{1}:latest-devel', env.REGISTRY, env.BACKEND_IMAGE_NAME) || '' }}
          amend: true
